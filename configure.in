AC_INIT([Judy], [0.5],
        [Troy Heber <troy.heber@hp.com>],
        [Judy])
AM_INIT_AUTOMAKE(judy, 0.5)
AM_MAINTAINER_MODE

AC_PROG_CC
AC_STDC_HEADERS


dnl Need to check for stdint.h
dnl some systems don't have stdint.h, but still have some of the types
dnl defined elsewhere
dnl AC_CHECK_HEADER(stdint.h, [
dnl   stdint_include="#include <stdint.h>"
dnl ])

dnl AC_CHECKTYPE2(uintmax_t, [$stdint_include])
dnl  if test $i_cv_type_uintmax_t = yes; then
dnl    AC_DEFINE(HAVE_UINTMAX_T,, Define if you have uintmax_t (C99 type))
dnl  fi
 
 dnl use separate check, eg. Solaris 8 has uintmax_t but not uint_fast32_t
dnl AC_CHECKTYPE2(uint_fast32_t, [$stdint_include])
dnl  if test $i_cv_type_uint_fast32_t = yes; then
dnl    AC_DEFINE(HAVE_UINT_FAST32_T,, Define if you have uint_fast32_t (C99 type))
dnl  fi


dnl
dnl It's good to be paranoid ;-)
dnl
AC_ARG_ENABLE([pedantic],
    [  --enable-pedantic       enable various extra warnings for gcc])
if test x"$enable_pedantic" = xyes; then
    if test x"$GCC" = xyes; then
	dnl  -Wtraditional is not included here!
	CFLAGS="$CFLAGS -pedantic -Wall -W -Waggregate-return -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Wcomment -Wconversion -Wformat -Wid-clash-30 -Wimplicit -Wimplicit-function-delcaration -Wimplicit-int -Wlong-long -Wmain -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-import -Wno-parentheses -Wparentheses -Wpointer-arith -Wredundant-decls -Wreturn-type -Wshadow -Wsign-compare -Wstrict-prototypes -Wswitch -Wtrigraphs -Wunused -Wwrite-strings"
    fi
fi

dnl These must be called before AM_PROG_LIBTOOL, because it may want
dnl to call AC_CHECK_PROG.
AC_CHECK_TOOL(AR, ar)
AC_CHECK_TOOL(LD, ld)
AC_CHECK_TOOL(RANLIB, ranlib, :)

dnl Checks for libtool - this must be done after we set cflags (abi issues)
dnl
AM_PROG_LIBTOOL

WARN_CFLAGS=""
build_warnings="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
AC_ARG_ENABLE([build-warnings],
	      [  --enable-build-warnings    Enable build-time compiler warnings for gcc])
if test x"$build_warnings" = xyes; then
    if test x"$GCC" = xyes; then
	WARN_CFLAGS="${build_warnings}"
    fi
fi

AC_SUBST(WARN_CFLAGS)



AC_OUTPUT([
Makefile
src/Makefile])
